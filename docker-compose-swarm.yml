services:
  lmsbooks:
    image: lmsbooks:latest
    environment:
      - SPRING_PROFILES_ACTIVE=${ENV:-dev},bootstrap
      - spring.datasource.url=jdbc:postgresql://postgres:${POSTGRES_PORT:-5432}/postgres
      - spring.datasource.username=postgres
      - spring.datasource.password=password
      - file.upload-dir=/tmp/uploads-${ENV:-dev}
      - spring.rabbitmq.host=rabbitmq
    volumes:
      - "uploaded_files_volume:/tmp"
    deploy:
      replicas: 2
      update_config: #2.7 System does not have a downtime when updating a service
        parallelism: 1
        delay: 10s
        failure_action: rollback
      rollback_config: #2.3 Automatically rollback each service to a previous version
        parallelism: 1
        delay: 10s
        failure_action: pause
        monitor: 30s
        max_failure_ratio: 0.2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    ports:
      - "8087:8080"
    networks:
      - lms_network

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - "postgres_volume:/var/lib/postgresql/data"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    ports:
      - "5432:5432"
    networks:
      - lms_network

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    ports:
      - "5672:5672"    # RabbitMQ main port
      - "15672:15672"  # RabbitMQ management UI
    networks:
      - lms_network

  test_runner: #2.4 Tests are run against the container
    image: your-test-image:latest
    depends_on:
      - lmsbooks
    command: mvn test
    deploy:
      replicas: 0
      restart_policy:
        condition: none
    networks:
      - lms_network

networks:
  lms_network:
    driver: overlay

volumes:
  uploaded_files_volume:
  postgres_volume: